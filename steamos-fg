#! /usr/bin/env bash

# steamos-fg
# When using the SteamOS compositor, some games start behind the big picture UI and no graphics are displayed.
# This script forces such games to be shown in the foreground.
#
# Usage: steamos-fg [GAME_EXECUTABLE]

exec >> "${HOME}/steamos-fg.log"
exec 2>&1

set -Eeuo pipefail

apply_steamgame_property() {
    WINDOW_ID=$1
    if [ ! -z "${WINDOW_ID}" ]; then
        for ID in ${WINDOW_ID}; do
            echo "Handling window with ID $ID"
            # apply STEAM_GAME property to game window so steamos compositor shows game in foreground
            xprop -display ":0" -id "${ID}" -f STEAM_GAME 32c -set STEAM_GAME 470470 || true
        done
    fi
}

handle_child_processes() {
    PID=$1
    WINDOW_ID=$(DISPLAY=:0 xdotool search --pid "${PID}") || true
    apply_steamgame_property "${WINDOW_ID}"
    CHILD_PIDS=$(pgrep -P "${PID}") || true
    for PID in $CHILD_PIDS; do
        handle_child_processes "${PID}"
    done
}

handle_non_steam_windows() {
    # find window with size greater than 99x99 that is not a steam window
    RESULT=$(xwininfo -display ":0" -root -tree | grep -E "[0-9]{3}x[0-9]{3}" | grep -v \"Steam\"\: | grep -v \"SteamOverlay\"\:) || true
    WINDOW_IDS=$(echo "$RESULT" | awk '{print $1}') || true
    for ID in $WINDOW_IDS; do
        apply_steamgame_property "${ID}"
    done
}

foreground_job() {
    for _ in {1..30}; do
        sleep 1
        handle_child_processes "${PID_GAME}"
        handle_non_steam_windows
    done
}

# start game
exec "$@" > /dev/null &
PID_GAME=$!

foreground_job &
PID_FOREGROUND_JOB=$!

# wait for game exit
wait ${PID_GAME}
# stop resizer if it still is running
kill ${PID_FOREGROUND_JOB} || true
